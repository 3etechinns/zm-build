# __CORE

core: CUR_DEST_ROOT := $(CORE_DEST_ROOT)
core: CUR_PACKAGE_SPEC := $(BUILD_ROOT)/zimbra-core.spec
core: CUR_PACKAGE_NAME := zimbra-core
core: $(PACKAGE_DIR) core_stage core_pkg_spec_$(PACKAGE_EXT)
	(cd $(CUR_DEST_ROOT); \
		$(PACKAGING_COMMAND) $(PACKAGING_OPTIONS) )

.PHONY: $(CORE_DEST_DIR)/bin

core_pkg_spec_ccs:

core_pkg_spec_deb: $(CORE_DEST_ROOT)/DEBIAN/control

$(CORE_DEST_ROOT)/DEBIAN: force
	mkdir -p $@
	cp $(PACKAGE_CONF_DIR)/Spec/Scripts/zimbra-core.pre $@/preinst
	cat $(PACKAGE_CONF_DIR)/Spec/Scripts/zimbra-core.post >> $@/postinst
	chmod 555 $@/*

$(CORE_DEST_ROOT)/DEBIAN/control: $(CORE_DEST_ROOT)/DEBIAN $(CORE_DEST_ROOT)/DEBIAN/md5sums force
	cat $(PACKAGE_CONF_DIR)/Spec/zimbra-core.deb | \
		sed -e 's/@@VERSION@@/$(VERSION_TAG)/' \
		-e 's/@@RELEASE@@/$(RELEASE)/' \
		-e 's/@@ARCH@@/$(ARCH)/' \
		-e 's/^Copyright:/$(RPMCOPYRIGHTSTR):/' \
		-e '/^%pre$$/ r zimbra-core.pre' \
		-e '/^%post$$/ r zimbra-core.post' > $@

$(CORE_DEST_ROOT)/DEBIAN/md5sums: force
	(cd $(CORE_DEST_ROOT); \
	find . -type f ! -regex '.*opt/zimbra/conf/localconfig.xml' ! -regex '.*opt/zimbra/j2sdk-.*/jre/lib/security/cacerts' ! -regex '.*.hg.*' ! -regex '.*?debian-binary.*' ! -regex '.*?DEBIAN.*' -print0 | xargs -0 md5sum | sed -e 's| \./| |' > $@)

core_pkg_spec_rpm: $(BUILD_ROOT)/zimbra-core.spec

$(BUILD_ROOT)/zimbra-core.spec:
	cp $(PACKAGE_CONF_DIR)/Spec/Scripts/zimbra-core.pre $(BUILD_ROOT)
	cp $(PACKAGE_CONF_DIR)/Spec/Scripts/zimbra-core.post $(BUILD_ROOT)
	cat $(PACKAGE_CONF_DIR)/Spec/zimbra-core.spec | \
		sed -e 's/@@VERSION@@/$(VERSION_TAG)/' \
		-e 's/@@RELEASE@@/$(RELEASE)/' \
		-e 's/^Copyright:/$(RPMCOPYRIGHTSTR):/' \
		-e '/^%pre$$/ r zimbra-core.pre' \
		-e '/^%post$$/ r zimbra-core.post' > $(BUILD_ROOT)/zimbra-core.spec
	rm -f zimbra-core.pre
	rm -f zimbra-core.post
	(cd $(CORE_DEST_ROOT); find opt -maxdepth 2 -type f -o -type l \
		| sed -e 's|^|%attr(-, zimbra, zimbra) /|' >> \
		$(BUILD_ROOT)/zimbra-core.spec )
	echo "%attr(755, root, root) /opt/zimbra/bin" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, zimbra, zimbra) /opt/zimbra/docs" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(444, zimbra, zimbra) /opt/zimbra/docs/*" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, root, root) /opt/zimbra/contrib" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, root, root) /opt/zimbra/libexec" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, zimbra, zimbra) /opt/zimbra/logger" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/pflogsumm-$(PFLOG_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, zimbra, zimbra) /opt/zimbra/conf" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(644, zimbra, zimbra) /opt/zimbra/conf/*" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, zimbra, zimbra) /opt/zimbra/conf/attrs" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(644, zimbra, zimbra) /opt/zimbra/conf/attrs/*" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, zimbra, zimbra) /opt/zimbra/conf/externaldirsync" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(644, zimbra, zimbra) /opt/zimbra/conf/externaldirsync/*" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, zimbra, zimbra) /opt/zimbra/conf/msgs" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(644, zimbra, zimbra) /opt/zimbra/conf/msgs/*" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, zimbra, zimbra) /opt/zimbra/conf/nginx" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(644, zimbra, zimbra) /opt/zimbra/conf/nginx/*" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, zimbra, zimbra) /opt/zimbra/conf/nginx/includes" >> \
		$(BUILD_ROOT)/zimbra-core.spec
   	echo "%attr(755, zimbra, zimbra) /opt/zimbra/conf/nginx/includes/default" >> \
            	$(BUILD_ROOT)/zimbra-core.spec
    	echo "%attr(755, zimbra, zimbra) /opt/zimbra/conf/nginx/includes/vhost" >> \
        	$(BUILD_ROOT)/zimbra-core.spec
    	echo "%attr(755, zimbra, zimbra) /opt/zimbra/conf/nginx/includes/web.mode" >> \
        	$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, zimbra, zimbra) /opt/zimbra/conf/nginx/templates" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(644, zimbra, zimbra) /opt/zimbra/conf/nginx/templates/*" >> \
		$(BUILD_ROOT)/zimbra-core.spec
    	echo "%attr(755, zimbra, zimbra) /opt/zimbra/conf/nginx/templates/default" >> \
        	$(BUILD_ROOT)/zimbra-core.spec
    	echo "%attr(644, zimbra, zimbra) /opt/zimbra/conf/nginx/templates/default/*" >> \
        	$(BUILD_ROOT)/zimbra-core.spec
    	echo "%attr(755, zimbra, zimbra) /opt/zimbra/conf/nginx/templates/vhost" >> \
        	$(BUILD_ROOT)/zimbra-core.spec
    	echo "%attr(644, zimbra, zimbra) /opt/zimbra/conf/nginx/templates/vhost/*" >> \
        	$(BUILD_ROOT)/zimbra-core.spec
    	echo "%attr(755, zimbra, zimbra) /opt/zimbra/conf/nginx/templates/web.mode" >> \
        	$(BUILD_ROOT)/zimbra-core.spec
    	echo "%attr(644, zimbra, zimbra) /opt/zimbra/conf/nginx/templates/web.mode/*" >> \
        	$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, zimbra, zimbra) /opt/zimbra/conf/rights" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(644, zimbra, zimbra) /opt/zimbra/conf/rights/*" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, zimbra, zimbra) /opt/zimbra/conf/sasl2" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(644, zimbra, zimbra) /opt/zimbra/conf/sasl2/*" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(755, zimbra, zimbra) /opt/zimbra/conf/zmconfigd" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(644, zimbra, zimbra) /opt/zimbra/conf/zmconfigd/*" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/db" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, root, root) /opt/zimbra/j2sdk-$(OPENJDK_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, root, root) /opt/zimbra/lib" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/zimbramon" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/bdb-$(BDB_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/openssl-$(OPENSSL_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/heimdal-$(HEIMDAL_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/curl-$(CURL_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, root, zimbra) /opt/zimbra/$(SASL_DIR)-$(SASL_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/mariadb-$(MARIADB_VERSION_STRING)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/openldap-$(LDAP_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/tcmalloc-$(TCMALLOC_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "%attr(-, zimbra, zimbra) /opt/zimbra/rsync-$(RSYNC_VERSION)" >> \
		$(BUILD_ROOT)/zimbra-core.spec
	echo "" >>  $(BUILD_ROOT)/zimbra-core.spec
	echo "%clean" >>  $(BUILD_ROOT)/zimbra-core.spec

core_stage: $(CORE_COMPONENTS)

$(CORE_DEST_DIR):
	mkdir -p $@
	mkdir -p $@/bin
	mkdir -p $@/conf
	cp $(ENV_FILE_SOURCE) $(CORE_DEST_DIR)/$(ENV_FILE_DEST)
	cp $(PROFILE_SOURCE) $(CORE_DEST_DIR)/$(PROFILE_DEST)
	cp $(EXRC_SOURCE) $(CORE_DEST_DIR)/$(EXRC_DEST)
	cp $(VIMINFO_SOURCE) $(CORE_DEST_DIR)/$(VIMINFO_DEST)
	cp $(LDAPRC_SOURCE) $(CORE_DEST_DIR)/$(LDAPRC_DEST)
	cp $(PLATFORM_DOT_SOURCE) $(CORE_DEST_DIR)/$(PLATFORM_DOT_DEST)
	sed -i.orig -e 's/@@BUILD_PLATFORM@@/$(BUILD_PLATFORM)/' $(CORE_DEST_DIR)/$(PLATFORM_DOT_DEST)
	rm -f $(CORE_DEST_DIR)/$(PLATFORM_DOT_DEST).orig
	chmod 644 $(CORE_DEST_DIR)/$(VIMINFO_DEST)
	(cd $(CORE_DEST_DIR); tar xzf $(POSTFIX_LW_SOURCE).tgz)
	(cd $(CORE_DEST_DIR); tar xzf $(AMAVIS_LW_SOURCE).tgz)

$(CORE_DEST_DIR)/docs:
	@echo "*** Installing docs"
	mkdir -p $@
	cp $(LICENSE_DIR)/zimbra/zpl-full.txt $@/ZPL.txt
	cp $(LICENSE_DIR)/zimbra/ypl-full.txt $@/YPL.txt
	cp $(LICENSE_DIR)/zimbra/zimbra_public_eula_2.5.txt $@/zimbra_public_eula_2.5.txt
	cp $(SERVICE_DIR)/docs/*txt $@
	cp $(MIG_TOOLS_DIR)/ReadMe.txt $@/zmztozmig.txt
	echo "Zimbra Third Party Software version information" >$@/zimbra-software-versions.txt
	echo "Altermime version: $(ALTERMIME_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Amavisd-new version: $(AMAVISD_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Amavis Logwatch version: $(AMAVIS_LW_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Apache HTTPD version: $(APACHE_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Aspell version: $(SPELL_VERSION)" >> $@/zimbra-software-versions.txt
	echo "BDB version: $(BDB_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Cbpolicyd version: $(CBPOLICYD_VERSION)" >> $@/zimbra-software-versions.txt
	echo "ClamAV version: $(CLAMAV_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Curl version: $(CURL_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Cyrus SASL version: $(SASL_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Dspam version: $(DSPAM_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Heimdal version: $(HEIMDAL_VERSION)" >> $@/zimbra-software-versions.txt
	echo "OpenJDK version: $(OPENJDK_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Jetty version: $(JETTY_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Libtool version: $(LIBTOOL_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Memcached version: $(MEMCACHED_VERSION)" >> $@/zimbra-software-versions.txt
	echo "MySQL version: $(MARIADB_VERSION_STRING)" >> $@/zimbra-software-versions.txt
	echo "NetSNMP version: $(SNMP_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Nginx version: $(NGINX_VERSION)" >> $@/zimbra-software-versions.txt
	echo "OpenLDAP version: $(LDAP_VERSION)" >> $@/zimbra-software-versions.txt
	echo "OpenSSL version: $(OPENSSL_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Postfix version: $(POSTFIX_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Postfix Logwatch version: $(POSTFIX_LW_VERSION)" >> $@/zimbra-software-versions.txt
	echo "RRDtool version: $(RRD_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Rsync version: $(RSYNC_VERSION)" >> $@/zimbra-software-versions.txt
	echo "Tcmalloc version: $(TCMALLOC_VERSION)" >> $@/zimbra-software-versions.txt

$(CORE_DEST_DIR)/zimbramon: $(CORE_DEST_DIR)/zimbramon/bin $(CORE_DEST_DIR)/zimbramon/lib $(CORE_DEST_DIR)/zimbramon/pylibs $(CORE_DEST_DIR)/zimbramon/crontabs $(CORE_DEST_DIR) 
	@echo "*** Creating zimbramon"
	mkdir -p $@
	(cd $(CORE_DEST_DIR)/zimbramon; tar xzf $(RRD_SOURCE).tar.gz)
	mkdir -p $(CORE_DEST_DIR)/logger/db/work
	cp -f $(PACKAGE_CONF_DIR)/Img/connection_failed.gif \
		$(CORE_DEST_DIR)/logger/db/work
	cp -f $(PACKAGE_CONF_DIR)/Img/data_not_available.gif \
		$(CORE_DEST_DIR)/logger/db/work

$(CORE_DEST_DIR)/zimbramon/crontabs:
	mkdir -p $@
	cp -f $(PACKAGE_CONF_DIR)/Env/crontabs/* $(CORE_DEST_DIR)/zimbramon/crontabs/

$(CORE_DEST_DIR)/zimbramon/bin:
	mkdir -p $(CORE_DEST_DIR)/zimbramon/bin
	(cd $(CORE_DEST_DIR)/zimbramon/bin; \
	tar xzf $(PERL_LIB_SOURCE)/perlbin.tgz)
	mkdir -p $(CORE_DEST_DIR)/libexec
	cp -pr $(CORE_DEST_DIR)/zimbramon/bin/sa-learn $(CORE_DEST_DIR)/libexec/
	cp -pr $(CORE_DEST_DIR)/zimbramon/bin/innotop $(CORE_DEST_DIR)/libexec/

$(CORE_DEST_DIR)/zimbramon/pylibs:
	mkdir -p $(CORE_DEST_DIR)/zimbramon
	cp -R $(SERVICE_DIR)/src/python/pylibs $(CORE_DEST_DIR)/zimbramon

$(CORE_DEST_DIR)/zimbramon/lib:
	mkdir -p $(CORE_DEST_DIR)/zimbramon/lib
	(cd $(CORE_DEST_DIR)/zimbramon/lib; \
	tar xzf $(PERL_LIB_SOURCE)/perllib.tgz)
	cp -R $(BUILD_ROOT)/lib/Zimbra $(CORE_DEST_DIR)/zimbramon/lib

$(CORE_DEST_DIR)/$(PFLOG_DIR)-$(PFLOG_VERSION): $(CORE_DEST_DIR)
	@echo "*** Creating pflogsumm"
	mkdir -p $@/bin
	cp -f $(PFLOG_SOURCE)/pflogsumm.pl $@/bin
	cp -f $(PFLOG_SOURCE)/prepflog.pl $@/bin
	mkdir -p $@/man/man1
	cp -f $(PFLOG_SOURCE)/pflogsumm.1 $@/man/man1

$(CORE_DEST_DIR)/lib: $(WEBAPP_DIR)/service.war $(LDAP_DEST_DIR)/$(LDAP_DIR)-$(LDAP_VERSION) $(NATIVE_DIR)/$(ANT_BUILD_DIR)/libzimbra-native.$(JNI_EXT)
	@echo "*** Installing lib"
	mkdir -p $@
	cp -pr $(SERVICE_DIR)/$(ANT_BUILD_DIR)/dist/lib/* $@
	-rm -rf $@/jars/junit*.jar
	-rm -rf $@/jars/objenesis*.jar
	cp -pr $(NATIVE_DIR)/$(ANT_BUILD_DIR)/libzimbra-native.$(JNI_EXT) $@
	cp -pr $(JUNIXSOCKET_NATIVE) $@
	(cd $(CORE_DEST_DIR); tar xzf $(THIRD_PARTY_BUILDS)/$(BUILD_PLATFORM)/mariadb/mariadb-libs-$(MARIADB_VERSION).tgz)

$(NATIVE_DIR)/$(ANT_BUILD_DIR)/libzimbra-native.$(JNI_EXT):
	(cd $(NATIVE_DIR); make JAVA_BINARY=$(JAVA_BINARY))

$(LAUNCHER_DIR)/$(ANT_BUILD_DIR)/zmmailboxdmgr:
	(cd $(LAUNCHER_DIR); make JAVA_BINARY=$(JAVA_BINARY))

$(CORE_DEST_DIR)/j2sdk-$(OPENJDK_VERSION):
	@echo "*** Creating OpenJDK"
	(cd $(CORE_DEST_DIR);tar xfz $(OPENJDK_SOURCE).tgz;)

$(CORE_DEST_DIR)/db: $(WEBAPP_DIR)/service.war
	mkdir -p $@
	cp -R $(SERVICE_DIR)/src/db/mysql/db.sql $@
	cp -R $(SERVICE_DIR)/src/db/mysql/create_database.sql $@
	cp -R $(SERVICE_DIR)/$(MAVEN_TARGET_DIR)/versions-init.sql $@

$(CORE_DEST_DIR)/conf: $(WEBAPP_DIR)/service.war
	@echo "*** Installing conf"
	mkdir -p $@
	cp $(PACKAGE_CONF_DIR)/Conf/swatchrc $@/swatchrc.in
	cp $(PACKAGE_CONF_DIR)/Conf/logswatchrc $@/logswatchrc
	cp $(PACKAGE_CONF_DIR)/Conf/auditswatchrc $@/auditswatchrc.in
	cp $(SERVICE_DIR)/$(ANT_BUILD_DIR)/dist/conf/localconfig.xml $@
	cp $(SERVICE_DIR)/$(ANT_BUILD_DIR)/dist/conf/log4j.properties $@/log4j.properties.in
	cp $(PACKAGE_CONF_DIR)/Conf/zmssl.cnf.in $@
	cp $(SERVICE_DIR)/conf/datasource.xml $@
	cp $(SERVICE_DIR)/conf/amavisd.conf.in $@
	cp $(SERVICE_DIR)/conf/amavisd/amavisd-custom.conf $@
	cp $(SERVICE_DIR)/conf/opendkim.conf.in $@
	cp $(SERVICE_DIR)/conf/opendkim-localnets.conf.in $@
	cp $(SERVICE_DIR)/conf/dspam.conf.in $@
	cp $(SERVICE_DIR)/conf/zmlogrotate $@
	cp $(SERVICE_DIR)/conf/clamd.conf.in $@
	cp $(SERVICE_DIR)/conf/freshclam.conf.in $@
	cp $(SERVICE_DIR)/conf/postfix_header_checks.in $@
	cp $(SERVICE_DIR)/conf/mta_milter_options.in $@
	mkdir -p $@/nginx/includes/default
	mkdir -p $@/nginx/includes/vhost
	mkdir -p $@/nginx/includes/web.mode
	mkdir -p $@/nginx/templates/default
	mkdir -p $@/nginx/templates/vhost
	mkdir -p $@/nginx/templates/web.mode
	cp $(SERVICE_DIR)/conf/nginx/default/* $@/nginx/templates/default
	cp $(SERVICE_DIR)/conf/nginx/vhost/* $@/nginx/templates/vhost
	cp $(SERVICE_DIR)/conf/nginx/web.mode/* $@/nginx/templates/web.mode
	cp $(SERVICE_DIR)/conf/stats.conf.in $@
	cp $(SERVICE_DIR)/conf/salocal.cf.in $@
	cp $(SERVICE_DIR)/conf/unbound.conf.in $@
	cp $(SERVICE_DIR)/conf/saslauthd.conf.in $@ 
	mkdir -p $@/sasl2
	cp $(SERVICE_DIR)/conf/postfix_sasl_smtpd.conf $@/sasl2/smtpd.conf.in
	cp $(SERVICE_DIR)/conf/zmconfigd.cf $@/zmconfigd.cf
	cp $(SERVICE_DIR)/conf/zmconfigd.log4j.properties $@/zmconfigd.log4j.properties
	cp $(SERVICE_DIR)/conf/milter.log4j.properties $@/milter.log4j.properties
	cp $(SERVICE_DIR)/conf/timezones.ics $@
	cp $(SERVICE_DIR)/conf/zimbra.ld.conf $@
	cp $(SERVICE_DIR)/conf/cbpolicyd.conf.in $@
	mkdir -p $@/zmconfigd
	cp $(SERVICE_DIR)/conf/zmconfigd/postfix_content_filter.cf $@/zmconfigd/postfix_content_filter.cf
	cp $(SERVICE_DIR)/conf/zmconfigd/smtpd_recipient_restrictions.cf $@/zmconfigd/smtpd_recipient_restrictions.cf
	cp $(SERVICE_DIR)/conf/zmconfigd/smtpd_relay_restrictions.cf $@/zmconfigd/smtpd_relay_restrictions.cf
	cp $(SERVICE_DIR)/conf/zmconfigd/smtpd_end_of_data_restrictions.cf $@/zmconfigd/smtpd_end_of_data_restrictions.cf
	cp $(SERVICE_DIR)/conf/zmconfigd/smtpd_sender_restrictions.cf $@/zmconfigd/smtpd_sender_restrictions.cf
	cp $(SERVICE_DIR)/conf/zmconfigd/smtpd_sender_login_maps.cf $@/zmconfigd/smtpd_sender_login_maps.cf
	cp -Rf $(SERVICE_DIR)/conf/externaldirsync $@/externaldirsync
	cp -Rf $(SERVICE_DIR)/$(ANT_BUILD_DIR)/dist/conf/rights $@/rights
	rm -f $@/rights/zimbra-rights-domainadmin.xml-template
	cp -Rf $(SERVICE_DIR)/$(ANT_BUILD_DIR)/dist/conf/msgs $@/msgs
	mkdir -p $@/attrs
	cp -f $(SERVICE_DIR)/$(ANT_BUILD_DIR)/dist/conf/attrs/* $@/attrs

$(CORE_DEST_DIR)/libexec: $(LAUNCHER_DIR)/$(ANT_BUILD_DIR)/zmmailboxdmgr
	@echo "*** Installing libexec"
	mkdir -p $@/installer/util/modules
	mkdir -p $@/installer/bin
	cp -f $(PACKAGE_CONF_DIR)/Install/zmsetup.pl $@/zmsetup.pl
	cp -f $(PACKAGE_CONF_DIR)/Upgrade/zmupgrade.pm $@/zmupgrade.pm
	cp -f $(PACKAGE_CONF_DIR)/Install/install.sh $@/installer/install.sh
	cp -f $(BUILD_ROOT)/rpmconf/Build/get_plat_tag.sh $@/installer/bin/get_plat_tag.sh
	cp -f $(PACKAGE_CONF_DIR)/Install/install-mac.sh $@/installer/install-mac.sh
	cp -f $(PACKAGE_CONF_DIR)/Install/Util/*sh $@/installer/util
	cp -f $(PACKAGE_CONF_DIR)/Install/Util/modules/*sh $@/installer/util/modules
	mkdir -p $@/scripts
	cp -f $(SERVICE_DIR)/src/db/migration/Migrate.pm $@/scripts
	cp -f $(SERVICE_DIR)/src/db/migration/migrate*pl $@/scripts
	cp -f $(SERVICE_DIR)/src/db/migration/migrate*sh $@/scripts
	cp -f $(SERVICE_DIR)/src/db/migration/optimize*pl $@/scripts
	cp -f $(SERVICE_DIR)/src/db/migration/fix*pl $@/scripts
	cp -f $(SERVICE_DIR)/src/db/migration/clearArchivedFlag.pl $@/scripts
	cp -f $(SERVICE_DIR)/src/ldap/migration/migrate*pl $@/scripts
	cp -f $(SERVICE_DIR)/src/cbpolicyd/migration/*sql $@/scripts
	cp -f $(SERVICE_DIR)/src/zca/migration/*pl $@/scripts
	cp -f $(PACKAGE_CONF_DIR)/Install/postinstall.pm $@/postinstall.pm
	cp -f $(PACKAGE_CONF_DIR)/Install/preinstall.pm $@/preinstall.pm
	cp -f $(PACKAGE_CONF_DIR)/Install/Util/addUser.sh $@/addUser.sh
	cp -f $(LAUNCHER_DIR)/$(ANT_BUILD_DIR)/zmmailboxdmgr $@
	cp -f $(LAUNCHER_DIR)/$(ANT_BUILD_DIR)/zmmailboxdmgr.unrestricted $@
	cp $(SERVICE_DIR)/src/libexec/* $@
	cp $@/swatch $@/logswatch
	cp $@/swatch $@/auditswatch
	cp -f $(BUILD_ROOT)/rpmconf/Build/get_plat_tag.sh $@

$(CORE_DEST_DIR)/bin:
	@echo "*** Installing bin"
	mkdir -p $@
	cp -R $(SERVICE_DIR)/$(ANT_BUILD_DIR)/dist/bin/[a-z]* $@
	rm -f $(CORE_DEST_DIR)/bin/zmtransserver.bat
	rm -rf $(CORE_DEST_DIR)/bin/zmexternaldirsync
	cp $(ZIMBRA_BIN_DIR)/zmswatchctl $@
	cp $(ZIMBRA_BIN_DIR)/zmlogswatchctl $@
	cp $(ZIMBRA_BIN_DIR)/zmauditswatchctl $@
	cp $(ZIMBRA_BIN_DIR)/zmcertmgr $@
	cp $(ZIMBRA_BIN_DIR)/zmtlsctl $@
	cp $(LDAP_DEST_ROOT)/opt/zimbra/$(LDAP_DIR)-$(LDAP_VERSION)/bin/ldapsearch $@
	cp $(ZIMBRA_BIN_DIR)/zmantispamctl $@
	cp $(ZIMBRA_BIN_DIR)/zmantivirusctl $@
	cp $(ZIMBRA_BIN_DIR)/zmcontrol $@
	cp $(ZIMBRA_BIN_DIR)/zmloggerctl $@
	cp $(ZIMBRA_BIN_DIR)/zmstorectl $@
	cp $(ZIMBRA_BIN_DIR)/zmproxyctl $@
	cp $(ZIMBRA_BIN_DIR)/zmmtactl $@
	cp $(ZIMBRA_BIN_DIR)/zmspellctl $@
	cp $(ZIMBRA_BIN_DIR)/zmapachectl $@
	cp $(ZIMBRA_BIN_DIR)/zmcbpolicydctl $@
	cp $@/zmprov $@/zmprov.java

$(CORE_DEST_DIR)/contrib:
	@echo "*** Installing contrib"
	mkdir -p $@
	cp -R $(SERVICE_DIR)/src/contrib/* $@

$(CORE_DEST_DIR)/$(BDB_DIR):
	@echo "*** Creating bdb"
	mkdir -p $@
	(cd $(CORE_DEST_DIR); tar xzf $(BDB_SOURCE).tgz; chmod u+w $(BDB_DIR)/bin/*)
	rm -rf $(CORE_DEST_DIR)/$(BDB_DIR)/docs/java

$(CORE_DEST_DIR)/$(OPENSSL_DIR)-$(OPENSSL_VERSION):
	@echo "*** Creating openssl"
	mkdir -p $@
	(cd $(CORE_DEST_DIR); tar xzf $(OPENSSL_SOURCE).tgz;)

$(CORE_DEST_DIR)/$(HEIMDAL_DIR)-$(HEIMDAL_VERSION):
	@echo "*** Creating heimdal"
	mkdir -p $@
	(cd $(CORE_DEST_DIR); tar xzf $(HEIMDAL_SOURCE).tgz;)

$(CORE_DEST_DIR)/$(CURL_DIR)-$(CURL_VERSION):
	@echo "*** Creating curl"
	mkdir -p $@
	(cd $(CORE_DEST_DIR); tar xzf $(CURL_SOURCE).tgz;)

$(CORE_DEST_DIR)/$(SASL_DIR)-$(SASL_VERSION):
	@echo "*** Creating cyrus-sasl"
	mkdir -p $@
	(cd $(CORE_DEST_DIR); tar xzf $(SASL_SOURCE).tgz;)

$(CORE_DEST_DIR)/$(LDAP_DIR)-libs-$(LDAP_VERSION):
	@echo "*** Creating openldap client libraries"
	mkdir -p $(CORE_DEST_DIR)/$(LDAP_DIR)-$(LDAP_VERSION)
	(cd $(CORE_DEST_DIR); tar xzf $(LDAP_LIBS).tgz;)

$(CORE_DEST_DIR)/$(TCMALLOC_DIR):
	@echo "*** Creating tcmalloc client libraries"
	mkdir -p $@
	(cd $(CORE_DEST_DIR); tar xfz $(TCMALLOC_SOURCE).tgz;)

$(CORE_DEST_DIR)/$(RSYNC_DIR):
	@echo "*** Creating rsync client libraries"
	mkdir -p $@
	(cd $(CORE_DEST_DIR); tar xfz $(RSYNC_SOURCE).tgz;)

